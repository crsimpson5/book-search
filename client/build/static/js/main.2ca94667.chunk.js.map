{"version":3,"sources":["components/Header/index.js","components/SearchCard/index.js","components/ResultsCard/index.js","components/Navbar/index.js","Utils/API.js","pages/Search.js","components/SavedBooksCard/index.js","pages/Saved.js","App.js","registerServiceWorker.js","index.js"],"names":["Header","props","react_default","a","createElement","Jumbotron","fluid","className","Container","SearchCard","Card","Body","Title","Form","onSubmit","handleSubmit","Row","noGutters","Col","lg","Group","controlId","Control","type","placeholder","name","value","onChange","handleInputChange","Button","variant","ResultsCard","query","concat","books","map","book","index","key","title","authors","join","href","link","target","data-idx","onClick","handleSave","src","image","alt","description","NavbarComponent","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","id","Nav","Link","API","getBooks","axios","get","saveBook","bookData","post","deleteBook","delete","searchGB","split","Search","state","input","event","_event$target","_this","setState","Object","defineProperty","preventDefault","then","res","data","items","forEach","volumeInfo","push","imageLinks","thumbnail","infoLink","catch","err","console","log","idx","parseInt","getAttribute","react","components_Navbar","components_Header","components_SearchCard","this","components_ResultsCard","Component","SavedBooksCard","updateBooks","_id","Saved","components_SavedBooksCard","App","react_router_dom","react_router","path","exact","component","render","to","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","ReactDOM","src_App_0","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.2ca94667.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Jumbotron, Container } from \"react-bootstrap\";\r\n\r\nconst Header = props => {\r\n  return (\r\n    <Jumbotron fluid className=\"text-center\">\r\n      <Container>\r\n        <h1>Google Books Search</h1>\r\n        <p>Search for and Save Books of Interest</p>\r\n      </Container>\r\n    </Jumbotron>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { Card, Button, Row, Col, Form } from \"react-bootstrap\";\r\n\r\nconst SearchCard = props => {\r\n  return (\r\n    <Card className=\"mb-4\">\r\n      <Card.Body>\r\n        <Card.Title>Book Search</Card.Title>\r\n        <Form onSubmit={props.handleSubmit}>\r\n          <Row noGutters>\r\n            <Col lg={11}>\r\n              <Form.Group controlId=\"formSearch\">\r\n                <Form.Control \r\n                  type=\"text\" \r\n                  placeholder=\"Enter book title\"\r\n                  name=\"input\"\r\n                  value={props.value}\r\n                  onChange={props.handleInputChange}\r\n                />\r\n              </Form.Group>\r\n            </Col>\r\n            <Col lg={1}>\r\n              <Button \r\n                variant=\"primary\" \r\n                type=\"submit\"\r\n              >\r\n                Submit\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default SearchCard\r\n","import React from \"react\";\r\nimport { Card, Button, Row, Col } from \"react-bootstrap\";\r\nimport \"./style.css\";\r\n\r\nconst ResultsCard = props => {\r\n  return (\r\n    <Card className=\"mb-5\">\r\n      <Card.Body>\r\n        <Card.Title>Results {props.query ? `for \"${props.query}\"` : \"\"}</Card.Title>\r\n          {props.books.map((book, index) => {\r\n            return (\r\n              <Card key={`book-${index}`}>\r\n                <Card.Header></Card.Header>\r\n                <Card.Body>\r\n                  <Row noGutters>\r\n                    <Col lg={10}>\r\n                      <Card.Title>{book.title}</Card.Title>\r\n                      <p>By {book.authors ? book.authors.join(\", \") : \"unknown\"}</p>\r\n                    </Col>\r\n                    <Col lg={2} className=\"text-right\">\r\n                      <Button variant=\"primary\" href={book.link} target=\"_blank\">View</Button>\r\n                      <Button variant=\"primary\" className=\"ml-1\" data-idx={index} onClick={props.handleSave}>Save</Button>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col lg={2}>\r\n                      <img className=\"book-img\" src={book.image} alt=\"book cover\" \r\n                      />\r\n                    </Col>\r\n                    <Col lg={9}>\r\n                      <div className=\"description\">{book.description}</div>\r\n                    </Col>\r\n                  </Row>\r\n                </Card.Body>\r\n              </Card>\r\n            );\r\n          })}\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ResultsCard;\r\n","import React from \"react\";\r\nimport { Navbar, Nav } from \"react-bootstrap\";\r\n\r\nconst NavbarComponent = props => {\r\n  return (\r\n    <Navbar bg=\"light\" expand=\"lg\">\r\n      <Navbar.Brand href=\"/\">Google Books</Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n      <Navbar.Collapse id=\"basic-navbar-nav\">\r\n        <Nav className=\"mr-auto text-right\">\r\n          <Nav.Link href=\"/\">Search</Nav.Link>\r\n          <Nav.Link href=\"/saved\">Saved</Nav.Link>\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n}\r\n\r\nexport default NavbarComponent;\r\n","import axios from \"axios\";\r\n\r\nexport default {\r\n  getBooks: function() {\r\n    return axios.get(\"/api/books\");\r\n  },\r\n  saveBook: function(bookData) {\r\n    return axios.post(\"/api/books\", bookData);\r\n  },\r\n  deleteBook: function(id) {\r\n    return axios.delete(\"/api/books/\" + id);\r\n  },\r\n  searchGB: function(query) {\r\n    return axios.get(`https://www.googleapis.com/books/v1/volumes?q=${query.split(\" \").join(\"+\")}`)\r\n  }\r\n};\r\n","import React, { Component, Fragment } from \"react\";\r\nimport Header from \"../components/Header\";\r\nimport SearchCard from \"../components/SearchCard\";\r\nimport ResultsCard from \"../components/ResultsCard\";\r\nimport Navbar from \"../components/Navbar\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport API from \"../Utils/API\";\r\n\r\nclass Search extends Component {\r\n  state = {\r\n    input: \"\",\r\n    query: \"\",\r\n    books: []\r\n  }\r\n\r\n  handleInputChange = event => {\r\n    let { name, value } = event.target;\r\n\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    API.searchGB(this.state.input)\r\n      .then(res => {\r\n        let books = [];\r\n\r\n        if (res.data.items) {\r\n          res.data.items.forEach(book => {\r\n            book = book.volumeInfo;\r\n            \r\n            books.push({\r\n              title: book.title,\r\n              authors: book.authors,\r\n              description: book.description,\r\n              image: book.imageLinks.thumbnail,\r\n              link: book.infoLink\r\n            });\r\n          });\r\n        }\r\n\r\n        this.setState({ query: this.state.input }, () => {\r\n          this.setState({\r\n            input: \"\",\r\n            books\r\n          });\r\n        })\r\n      })\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  handleSave = event => {\r\n    let idx = parseInt(event.target.getAttribute(\"data-idx\"));\r\n    \r\n    API.saveBook(this.state.books[idx]);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <Navbar />\r\n        <Container>\r\n          <Header />\r\n          <SearchCard \r\n            handleInputChange={this.handleInputChange}\r\n            handleSubmit={this.handleSubmit}\r\n            value={this.state.input}\r\n          />\r\n          <ResultsCard \r\n            books={this.state.books}\r\n            query={this.state.query}\r\n            handleSave={this.handleSave}\r\n          />\r\n        </Container>\r\n      </Fragment>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Search;\r\n","import React, { Component } from \"react\";\r\nimport { Card, Button, Row, Col } from \"react-bootstrap\";\r\nimport API from \"../../Utils/API\";\r\n\r\nclass SavedBooksCard extends Component {\r\n  state = {\r\n    books: []\r\n  }\r\n\r\n  updateBooks = () => {\r\n    API.getBooks()\r\n      .then(res => {\r\n        this.setState({\r\n          books: res.data\r\n        });\r\n      });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.updateBooks();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.updateBooks();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Card>\r\n        <Card.Body>\r\n          <Card.Title>Saved Books</Card.Title>\r\n            {this.state.books.map((book, index) => {\r\n              return (\r\n                <Card key={`book-${index}`}>\r\n                  <Card.Header></Card.Header>\r\n                  <Card.Body>\r\n                    <Row noGutters>\r\n                      <Col lg={10}>\r\n                        <Card.Title>{book.title}</Card.Title>\r\n                        <p>By {book.authors ? book.authors.join(\", \") : \"unknown\"}</p>\r\n                      </Col>\r\n                      <Col lg={2} className=\"text-right\">\r\n                        <Button variant=\"primary\" href={book.link} target=\"_blank\">View</Button>\r\n                        <Button variant=\"primary\" className=\"ml-1\" onClick={() => API.deleteBook(book._id)}>Remove</Button>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row>\r\n                      <Col lg={2}>\r\n                        <img className=\"book-img\" src={book.image} alt=\"book cover\" \r\n                        />\r\n                      </Col>\r\n                      <Col lg={9}>\r\n                        <div className=\"description\">{book.description}</div>\r\n                      </Col>\r\n                    </Row>\r\n                  </Card.Body>\r\n                </Card>\r\n              );\r\n            })}\r\n        </Card.Body>\r\n      </Card>\r\n    );\r\n  }\r\n};\r\n\r\nexport default SavedBooksCard;\r\n","import React, { Fragment } from \"react\";\r\nimport Header from \"../components/Header\";\r\nimport SavedBooksCard from \"../components/SavedBooksCard\";\r\nimport Navbar from \"../components/Navbar\";\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nconst Saved = props => {\r\n  return (\r\n    <Fragment>\r\n      <Navbar />\r\n      <Container>\r\n        <Header />\r\n        <SavedBooksCard />\r\n      </Container>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Saved;\r\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\nimport Search from \"./pages/Search\";\nimport Saved from \"./pages/Saved\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <Switch>\n          <Route path=\"/\" exact component={Search} />\n          <Route path=\"/saved\" component={Saved} />\n          <Route render={() => <Redirect to=\"/\"/>} />\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}